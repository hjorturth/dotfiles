# ~/.bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# SSH agent setup with keychain
eval "$(keychain --eval --agents ssh id_rsa)"

# Python completion for pipx
eval "$(register-python-argcomplete pipx)"

# Prompt (username@hostname directory $)
PS1='[\u@\h \W]\$ '

# History search using arrow keys
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

# History settings
export HISTIGNORE="ls*:rm*:cd*:CD*:ps*:exit*:reset*:clear*:synaptic*:mkdir*:cat*:wifi*:btop:top"
export HISTCONTROL=ignoreboth
shopt -s histappend
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# Trim long paths in prompt
PROMPT_DIRTRIM=1

#Setting My editor
export EDITOR=code

#Improving less 
export LESS=-R
export LESSHISTFILE=-

# Load additional aliases if they exist
if [ -f "$HOME/.bash_aliases" ]; then
    source "$HOME/.bash_aliases"
fi

#Extracting Files: A common function to extract various archive formats (zip, tar, gz, etc.):
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1" ;;
            *.tar.gz)    tar xzf "$1" ;;
            *.bz2)       bunzip2 "$1" ;;
            *.rar)       unrar x "$1" ;;
            *.gz)        gunzip "$1" ;;
            *.tar)       tar xf "$1" ;;
            *.tbz2)      tar xjf "$1" ;;
            *.tgz)       tar xzf "$1" ;;
            *.zip)       unzip "$1" ;;
            *.Z)         uncompress "$1" ;;
            *.7z)        7z x "$1" ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}
